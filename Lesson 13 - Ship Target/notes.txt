An example of using animate() and clock scheduling to move actors around.

There are two actors in this example, each with a different movement strategy.

The block
---------

The block moves in a loop around the screen:

* We schedule the move_block() function to be called every 2 seconds using
  clock.schedule_interval().
* The next position of the block is given by calling next() on a "cycle"
  object, returned by itertools.cycle(). This will cycle through the block
  coordinates we provide it, repeating without end.
* We use animate() to move the block.


The ship
--------

The ship moves in a random dance in the middle of the screen. The ship
flips back and forth between a rotation phase and a movement phase:


* next_ship_target(): pick a new target location for the ship at random, and
  animate rotating the ship to aim at it. When the rotation animation is
  complete, we will call move_ship().
* move_ship(): Move the ship to its target. When the move animation is
  complete, we will call next_ship_target().


# Angles are tricky because 0 and 359 degrees are right next to each other.
    #
    # If we call animate(angle=target_angle) now, it wouldn't know about this,
    # and will simple adjust the value of angle from 359 down to 0, which means
    # that the ship spins nearly all the way round.
    #
    # We can always add multiples of 360 to target_angle to get the same angle.
    # 0 degrees = 360 degrees = 720 degrees = -360 degrees and so on. If the
    # ship is currently at 359 degrees, then having it animate to 360 degrees
    # is the animation we want.
    #
    # Here we calculate how many multiples we need to add so that any rotations
    # will be less than 180 degrees.